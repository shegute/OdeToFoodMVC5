<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    @*//??? Specify the new API controller and action to call*@
                    <li>@Html.ActionLink("Restaurants", "Index", "Restaurants")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @*??? This will check the tempdata datastruture and show any messages that have been populated from other views/requests
        The value in this datastructure will also be overwritten once the page is refereshed/another request is sent.*@
        @if (TempData["Message"] != null)
        {<div class="alert alert-info">@TempData["Message"] </div>}

    @*??? This is where the content from any child cshtml views that refrence this default master view
    will be rendered*@
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
            @*??? You can add additional sections that you want to be rendered from the referencing child views
            by adding a rendersection like so and adding corresponding content in the referencing view*@
            @RenderSection("footer", required: false)
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
